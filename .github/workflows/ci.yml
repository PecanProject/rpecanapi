on:
  push:
    branches:
      - master
  pull_request:
      

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-16.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
          - {os: ubuntu-18.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
    
    services:
      postgres:
        image: mdillon/postgis:9.5
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      api:
        image: pecan/api:develop
        env:
          PGHOST: postgres
          PECAN_VERSION: 1.7.0
          PECAN_GIT_BRANCH: develop
          PECAN_GIT_CHECKSUM: unknown
          PECAN_GIT_DATE: unknown
          HOST_ONLY: FALSE
          AUTH_REQ: TRUE
        ports:
          - 8000:8000
        
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      NCPUS: 2
      CI: true

    steps:
      - uses: actions/checkout@v2
      
      #- name: install utils
      #  run: |
      #    sudo apt-get update
      #    sudo apt-get install -y openssh-client postgresql-client curl
        
      - name: db setup
        uses: docker://pecan/db:latest

      - name: create account
        uses: docker://pecan/bety:develop
        with:
          # entrypoint: /home/bety/script/betyuser.sh
          args: user carya illinois "Carya Demo User" carya@example.com 1 1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
